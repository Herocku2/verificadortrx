{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATOS/verificador/verificadortrx/frontend/src/components/DiagnosticsModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Modal from './Modal';\nimport Button from './Button';\nimport { verifyWalletBasic } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagnosticsContainer = styled.div`\n  max-width: 600px;\n  color: var(--color-text);\n`;\n_c = DiagnosticsContainer;\nconst DiagnosticSection = styled.div`\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  border-left: 4px solid ${props => {\n  switch (props.status) {\n    case 'success':\n      return 'var(--color-success)';\n    case 'warning':\n      return 'var(--color-warning)';\n    case 'error':\n      return 'var(--color-danger)';\n    default:\n      return 'var(--color-text-secondary)';\n  }\n}};\n`;\n_c2 = DiagnosticSection;\nconst SectionTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n_c3 = SectionTitle;\nconst StatusIcon = styled.span`\n  font-size: 1.2rem;\n`;\n_c4 = StatusIcon;\nconst DetailsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0.5rem 0;\n`;\n_c5 = DetailsList;\nconst DetailItem = styled.li`\n  padding: 0.25rem 0;\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n  display: flex;\n  justify-content: space-between;\n`;\n_c6 = DetailItem;\nconst TestButton = styled(Button)`\n  margin-top: 1rem;\n  width: 100%;\n`;\n_c7 = TestButton;\nconst LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: var(--color-primary);\n  animation: spin 1s ease-in-out infinite;\n  \n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n`;\n_c8 = LoadingSpinner;\nconst DiagnosticsModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [diagnostics, setDiagnostics] = useState({\n    frontend: {\n      status: 'checking',\n      details: {}\n    },\n    backend: {\n      status: 'checking',\n      details: {}\n    },\n    blockchain: {\n      status: 'checking',\n      details: {}\n    },\n    network: {\n      status: 'checking',\n      details: {}\n    }\n  });\n  const [testing, setTesting] = useState(false);\n  useEffect(() => {\n    if (isOpen) {\n      runDiagnostics();\n    }\n  }, [isOpen]);\n  const runDiagnostics = async () => {\n    setTesting(true);\n\n    // Test Frontend\n    const frontendTest = testFrontend();\n    setDiagnostics(prev => ({\n      ...prev,\n      frontend: frontendTest\n    }));\n\n    // Test Backend Connection\n    try {\n      const backendTest = await testBackend();\n      setDiagnostics(prev => ({\n        ...prev,\n        backend: backendTest\n      }));\n    } catch (error) {\n      setDiagnostics(prev => ({\n        ...prev,\n        backend: {\n          status: 'error',\n          details: {\n            error: error.message\n          }\n        }\n      }));\n    }\n\n    // Test Blockchain Connection\n    try {\n      const blockchainTest = await testBlockchain();\n      setDiagnostics(prev => ({\n        ...prev,\n        blockchain: blockchainTest\n      }));\n    } catch (error) {\n      setDiagnostics(prev => ({\n        ...prev,\n        blockchain: {\n          status: 'error',\n          details: {\n            error: error.message\n          }\n        }\n      }));\n    }\n\n    // Test Network\n    const networkTest = await testNetwork();\n    setDiagnostics(prev => ({\n      ...prev,\n      network: networkTest\n    }));\n    setTesting(false);\n  };\n  const testFrontend = () => {\n    const details = {\n      'React Version': React.version,\n      'User Agent': navigator.userAgent.split(' ')[0],\n      'Local Storage': typeof Storage !== \"undefined\" ? 'Available' : 'Not Available',\n      'API URL': process.env.REACT_APP_API_URL || 'http://localhost:5173/api'\n    };\n    return {\n      status: 'success',\n      details\n    };\n  };\n  const testBackend = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5173/api'}/verify/diagnostics`);\n      if (response.ok) {\n        var _data$server, _data$server2, _data$server3;\n        const data = await response.json();\n        return {\n          status: 'success',\n          details: {\n            'Server Status': ((_data$server = data.server) === null || _data$server === void 0 ? void 0 : _data$server.status) || 'Unknown',\n            'Uptime': (_data$server2 = data.server) !== null && _data$server2 !== void 0 && _data$server2.uptime ? `${Math.floor(data.server.uptime / 60)} minutes` : 'Unknown',\n            'Environment': ((_data$server3 = data.server) === null || _data$server3 === void 0 ? void 0 : _data$server3.nodeEnv) || 'Unknown'\n          }\n        };\n      } else {\n        return {\n          status: 'error',\n          details: {\n            'HTTP Status': response.status,\n            'Status Text': response.statusText\n          }\n        };\n      }\n    } catch (error) {\n      return {\n        status: 'error',\n        details: {\n          'Error': error.message,\n          'Type': error.name\n        }\n      };\n    }\n  };\n  const testBlockchain = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5173/api'}/verify/status`);\n      if (response.ok) {\n        const data = await response.json();\n        return {\n          status: data.success ? 'success' : 'error',\n          details: {\n            'TRON Connection': data.success ? 'Connected' : 'Disconnected',\n            'Method': data.method || 'Unknown',\n            'Block Number': data.block_number || 'Unknown',\n            'Timestamp': data.timestamp ? new Date(data.timestamp).toLocaleTimeString() : 'Unknown'\n          }\n        };\n      } else {\n        return {\n          status: 'error',\n          details: {\n            'HTTP Status': response.status,\n            'Error': 'Failed to check TRON status'\n          }\n        };\n      }\n    } catch (error) {\n      return {\n        status: 'error',\n        details: {\n          'Error': error.message,\n          'Type': 'Network Error'\n        }\n      };\n    }\n  };\n  const testNetwork = async () => {\n    const startTime = Date.now();\n    try {\n      // Test basic connectivity\n      const response = await fetch('https://api.trongrid.io/wallet/getnowblock', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      });\n      const endTime = Date.now();\n      const latency = endTime - startTime;\n      if (response.ok) {\n        return {\n          status: latency < 2000 ? 'success' : 'warning',\n          details: {\n            'TronGrid API': 'Accessible',\n            'Latency': `${latency}ms`,\n            'Status': latency < 1000 ? 'Good' : latency < 2000 ? 'Slow' : 'Very Slow'\n          }\n        };\n      } else {\n        return {\n          status: 'error',\n          details: {\n            'TronGrid API': 'Not Accessible',\n            'HTTP Status': response.status,\n            'Latency': `${latency}ms`\n          }\n        };\n      }\n    } catch (error) {\n      return {\n        status: 'error',\n        details: {\n          'TronGrid API': 'Connection Failed',\n          'Error': error.message\n        }\n      };\n    }\n  };\n  const testWalletVerification = async () => {\n    setTesting(true);\n    try {\n      // Test with a known wallet address\n      const testWallet = 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t'; // USDT contract address\n      const result = await verifyWalletBasic(testWallet);\n      alert(`Test successful! Wallet verification is working. Result: ${JSON.stringify(result, null, 2)}`);\n    } catch (error) {\n      alert(`Test failed: ${error.message}`);\n    }\n    setTesting(false);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'success':\n        return '✅';\n      case 'warning':\n        return '⚠️';\n      case 'error':\n        return '❌';\n      case 'checking':\n        return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 31\n        }, this);\n      default:\n        return '❓';\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'success':\n        return 'OK';\n      case 'warning':\n        return 'Warning';\n      case 'error':\n        return 'Error';\n      case 'checking':\n        return 'Checking...';\n      default:\n        return 'Unknown';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"System Diagnostics\",\n    children: /*#__PURE__*/_jsxDEV(DiagnosticsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DiagnosticSection, {\n        status: diagnostics.frontend.status,\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: [/*#__PURE__*/_jsxDEV(StatusIcon, {\n            children: getStatusIcon(diagnostics.frontend.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), \"Frontend - \", getStatusText(diagnostics.frontend.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n          children: Object.entries(diagnostics.frontend.details).map(([key, value]) => /*#__PURE__*/_jsxDEV(DetailItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosticSection, {\n        status: diagnostics.backend.status,\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: [/*#__PURE__*/_jsxDEV(StatusIcon, {\n            children: getStatusIcon(diagnostics.backend.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), \"Backend - \", getStatusText(diagnostics.backend.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n          children: Object.entries(diagnostics.backend.details).map(([key, value]) => /*#__PURE__*/_jsxDEV(DetailItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosticSection, {\n        status: diagnostics.blockchain.status,\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: [/*#__PURE__*/_jsxDEV(StatusIcon, {\n            children: getStatusIcon(diagnostics.blockchain.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), \"Blockchain - \", getStatusText(diagnostics.blockchain.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n          children: Object.entries(diagnostics.blockchain.details).map(([key, value]) => /*#__PURE__*/_jsxDEV(DetailItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiagnosticSection, {\n        status: diagnostics.network.status,\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: [/*#__PURE__*/_jsxDEV(StatusIcon, {\n            children: getStatusIcon(diagnostics.network.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), \"Network - \", getStatusText(diagnostics.network.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n          children: Object.entries(diagnostics.network.details).map(([key, value]) => /*#__PURE__*/_jsxDEV(DetailItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '1rem',\n          marginTop: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TestButton, {\n          onClick: runDiagnostics,\n          disabled: testing,\n          variant: \"secondary\",\n          children: testing ? 'Running Tests...' : 'Run Tests Again'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TestButton, {\n          onClick: testWalletVerification,\n          disabled: testing,\n          children: testing ? 'Testing...' : 'Test Wallet Verification'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2rem',\n          padding: '1rem',\n          background: 'rgba(255, 255, 255, 0.05)',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginBottom: '0.5rem'\n          },\n          children: \"Common Issues & Solutions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            fontSize: '0.875rem',\n            color: 'var(--color-text-secondary)',\n            paddingLeft: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If Backend shows error: Make sure the backend server is running on port 5173\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If Blockchain shows error: TRON network might be experiencing issues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If Network is slow: Try again later or check your internet connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If you have tokens but can't scan: Try the \\\"Test Wallet Verification\\\" button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(DiagnosticsModal, \"ZyMxS2F/E/apBvFc7dVy4GpsPPc=\");\n_c9 = DiagnosticsModal;\nexport default DiagnosticsModal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"DiagnosticsContainer\");\n$RefreshReg$(_c2, \"DiagnosticSection\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"StatusIcon\");\n$RefreshReg$(_c5, \"DetailsList\");\n$RefreshReg$(_c6, \"DetailItem\");\n$RefreshReg$(_c7, \"TestButton\");\n$RefreshReg$(_c8, \"LoadingSpinner\");\n$RefreshReg$(_c9, \"DiagnosticsModal\");","map":{"version":3,"names":["React","useState","useEffect","styled","Modal","Button","verifyWalletBasic","jsxDEV","_jsxDEV","DiagnosticsContainer","div","_c","DiagnosticSection","props","status","_c2","SectionTitle","h3","_c3","StatusIcon","span","_c4","DetailsList","ul","_c5","DetailItem","li","_c6","TestButton","_c7","LoadingSpinner","_c8","DiagnosticsModal","isOpen","onClose","_s","diagnostics","setDiagnostics","frontend","details","backend","blockchain","network","testing","setTesting","runDiagnostics","frontendTest","testFrontend","prev","backendTest","testBackend","error","message","blockchainTest","testBlockchain","networkTest","testNetwork","version","navigator","userAgent","split","Storage","process","env","REACT_APP_API_URL","response","fetch","ok","_data$server","_data$server2","_data$server3","data","json","server","uptime","Math","floor","nodeEnv","statusText","name","success","method","block_number","timestamp","Date","toLocaleTimeString","startTime","now","headers","body","JSON","stringify","endTime","latency","testWalletVerification","testWallet","result","alert","getStatusIcon","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","title","children","Object","entries","map","key","value","style","display","gap","marginTop","onClick","disabled","variant","padding","background","borderRadius","marginBottom","fontSize","color","paddingLeft","_c9","$RefreshReg$"],"sources":["/Volumes/DATOS/verificador/verificadortrx/frontend/src/components/DiagnosticsModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Modal from './Modal';\nimport Button from './Button';\nimport { verifyWalletBasic } from '../services/api';\n\nconst DiagnosticsContainer = styled.div`\n  max-width: 600px;\n  color: var(--color-text);\n`;\n\nconst DiagnosticSection = styled.div`\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  border-left: 4px solid ${props => {\n    switch(props.status) {\n      case 'success': return 'var(--color-success)';\n      case 'warning': return 'var(--color-warning)';\n      case 'error': return 'var(--color-danger)';\n      default: return 'var(--color-text-secondary)';\n    }\n  }};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst StatusIcon = styled.span`\n  font-size: 1.2rem;\n`;\n\nconst DetailsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0.5rem 0;\n`;\n\nconst DetailItem = styled.li`\n  padding: 0.25rem 0;\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TestButton = styled(Button)`\n  margin-top: 1rem;\n  width: 100%;\n`;\n\nconst LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: var(--color-primary);\n  animation: spin 1s ease-in-out infinite;\n  \n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n`;\n\nconst DiagnosticsModal = ({ isOpen, onClose }) => {\n  const [diagnostics, setDiagnostics] = useState({\n    frontend: { status: 'checking', details: {} },\n    backend: { status: 'checking', details: {} },\n    blockchain: { status: 'checking', details: {} },\n    network: { status: 'checking', details: {} }\n  });\n  const [testing, setTesting] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      runDiagnostics();\n    }\n  }, [isOpen]);\n\n  const runDiagnostics = async () => {\n    setTesting(true);\n    \n    // Test Frontend\n    const frontendTest = testFrontend();\n    setDiagnostics(prev => ({ ...prev, frontend: frontendTest }));\n\n    // Test Backend Connection\n    try {\n      const backendTest = await testBackend();\n      setDiagnostics(prev => ({ ...prev, backend: backendTest }));\n    } catch (error) {\n      setDiagnostics(prev => ({ \n        ...prev, \n        backend: { \n          status: 'error', \n          details: { error: error.message } \n        } \n      }));\n    }\n\n    // Test Blockchain Connection\n    try {\n      const blockchainTest = await testBlockchain();\n      setDiagnostics(prev => ({ ...prev, blockchain: blockchainTest }));\n    } catch (error) {\n      setDiagnostics(prev => ({ \n        ...prev, \n        blockchain: { \n          status: 'error', \n          details: { error: error.message } \n        } \n      }));\n    }\n\n    // Test Network\n    const networkTest = await testNetwork();\n    setDiagnostics(prev => ({ ...prev, network: networkTest }));\n\n    setTesting(false);\n  };\n\n  const testFrontend = () => {\n    const details = {\n      'React Version': React.version,\n      'User Agent': navigator.userAgent.split(' ')[0],\n      'Local Storage': typeof(Storage) !== \"undefined\" ? 'Available' : 'Not Available',\n      'API URL': process.env.REACT_APP_API_URL || 'http://localhost:5173/api'\n    };\n\n    return {\n      status: 'success',\n      details\n    };\n  };\n\n  const testBackend = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5173/api'}/verify/diagnostics`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        return {\n          status: 'success',\n          details: {\n            'Server Status': data.server?.status || 'Unknown',\n            'Uptime': data.server?.uptime ? `${Math.floor(data.server.uptime / 60)} minutes` : 'Unknown',\n            'Environment': data.server?.nodeEnv || 'Unknown'\n          }\n        };\n      } else {\n        return {\n          status: 'error',\n          details: {\n            'HTTP Status': response.status,\n            'Status Text': response.statusText\n          }\n        };\n      }\n    } catch (error) {\n      return {\n        status: 'error',\n        details: {\n          'Error': error.message,\n          'Type': error.name\n        }\n      };\n    }\n  };\n\n  const testBlockchain = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5173/api'}/verify/status`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        return {\n          status: data.success ? 'success' : 'error',\n          details: {\n            'TRON Connection': data.success ? 'Connected' : 'Disconnected',\n            'Method': data.method || 'Unknown',\n            'Block Number': data.block_number || 'Unknown',\n            'Timestamp': data.timestamp ? new Date(data.timestamp).toLocaleTimeString() : 'Unknown'\n          }\n        };\n      } else {\n        return {\n          status: 'error',\n          details: {\n            'HTTP Status': response.status,\n            'Error': 'Failed to check TRON status'\n          }\n        };\n      }\n    } catch (error) {\n      return {\n        status: 'error',\n        details: {\n          'Error': error.message,\n          'Type': 'Network Error'\n        }\n      };\n    }\n  };\n\n  const testNetwork = async () => {\n    const startTime = Date.now();\n    \n    try {\n      // Test basic connectivity\n      const response = await fetch('https://api.trongrid.io/wallet/getnowblock', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({})\n      });\n      \n      const endTime = Date.now();\n      const latency = endTime - startTime;\n      \n      if (response.ok) {\n        return {\n          status: latency < 2000 ? 'success' : 'warning',\n          details: {\n            'TronGrid API': 'Accessible',\n            'Latency': `${latency}ms`,\n            'Status': latency < 1000 ? 'Good' : latency < 2000 ? 'Slow' : 'Very Slow'\n          }\n        };\n      } else {\n        return {\n          status: 'error',\n          details: {\n            'TronGrid API': 'Not Accessible',\n            'HTTP Status': response.status,\n            'Latency': `${latency}ms`\n          }\n        };\n      }\n    } catch (error) {\n      return {\n        status: 'error',\n        details: {\n          'TronGrid API': 'Connection Failed',\n          'Error': error.message\n        }\n      };\n    }\n  };\n\n  const testWalletVerification = async () => {\n    setTesting(true);\n    \n    try {\n      // Test with a known wallet address\n      const testWallet = 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t'; // USDT contract address\n      const result = await verifyWalletBasic(testWallet);\n      \n      alert(`Test successful! Wallet verification is working. Result: ${JSON.stringify(result, null, 2)}`);\n    } catch (error) {\n      alert(`Test failed: ${error.message}`);\n    }\n    \n    setTesting(false);\n  };\n\n  const getStatusIcon = (status) => {\n    switch(status) {\n      case 'success': return '✅';\n      case 'warning': return '⚠️';\n      case 'error': return '❌';\n      case 'checking': return <LoadingSpinner />;\n      default: return '❓';\n    }\n  };\n\n  const getStatusText = (status) => {\n    switch(status) {\n      case 'success': return 'OK';\n      case 'warning': return 'Warning';\n      case 'error': return 'Error';\n      case 'checking': return 'Checking...';\n      default: return 'Unknown';\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title=\"System Diagnostics\">\n      <DiagnosticsContainer>\n        <DiagnosticSection status={diagnostics.frontend.status}>\n          <SectionTitle>\n            <StatusIcon>{getStatusIcon(diagnostics.frontend.status)}</StatusIcon>\n            Frontend - {getStatusText(diagnostics.frontend.status)}\n          </SectionTitle>\n          <DetailsList>\n            {Object.entries(diagnostics.frontend.details).map(([key, value]) => (\n              <DetailItem key={key}>\n                <span>{key}:</span>\n                <span>{value}</span>\n              </DetailItem>\n            ))}\n          </DetailsList>\n        </DiagnosticSection>\n\n        <DiagnosticSection status={diagnostics.backend.status}>\n          <SectionTitle>\n            <StatusIcon>{getStatusIcon(diagnostics.backend.status)}</StatusIcon>\n            Backend - {getStatusText(diagnostics.backend.status)}\n          </SectionTitle>\n          <DetailsList>\n            {Object.entries(diagnostics.backend.details).map(([key, value]) => (\n              <DetailItem key={key}>\n                <span>{key}:</span>\n                <span>{value}</span>\n              </DetailItem>\n            ))}\n          </DetailsList>\n        </DiagnosticSection>\n\n        <DiagnosticSection status={diagnostics.blockchain.status}>\n          <SectionTitle>\n            <StatusIcon>{getStatusIcon(diagnostics.blockchain.status)}</StatusIcon>\n            Blockchain - {getStatusText(diagnostics.blockchain.status)}\n          </SectionTitle>\n          <DetailsList>\n            {Object.entries(diagnostics.blockchain.details).map(([key, value]) => (\n              <DetailItem key={key}>\n                <span>{key}:</span>\n                <span>{value}</span>\n              </DetailItem>\n            ))}\n          </DetailsList>\n        </DiagnosticSection>\n\n        <DiagnosticSection status={diagnostics.network.status}>\n          <SectionTitle>\n            <StatusIcon>{getStatusIcon(diagnostics.network.status)}</StatusIcon>\n            Network - {getStatusText(diagnostics.network.status)}\n          </SectionTitle>\n          <DetailsList>\n            {Object.entries(diagnostics.network.details).map(([key, value]) => (\n              <DetailItem key={key}>\n                <span>{key}:</span>\n                <span>{value}</span>\n              </DetailItem>\n            ))}\n          </DetailsList>\n        </DiagnosticSection>\n\n        <div style={{ display: 'flex', gap: '1rem', marginTop: '2rem' }}>\n          <TestButton \n            onClick={runDiagnostics} \n            disabled={testing}\n            variant=\"secondary\"\n          >\n            {testing ? 'Running Tests...' : 'Run Tests Again'}\n          </TestButton>\n          \n          <TestButton \n            onClick={testWalletVerification} \n            disabled={testing}\n          >\n            {testing ? 'Testing...' : 'Test Wallet Verification'}\n          </TestButton>\n        </div>\n\n        <div style={{ marginTop: '2rem', padding: '1rem', background: 'rgba(255, 255, 255, 0.05)', borderRadius: '8px' }}>\n          <h4 style={{ marginBottom: '0.5rem' }}>Common Issues & Solutions:</h4>\n          <ul style={{ fontSize: '0.875rem', color: 'var(--color-text-secondary)', paddingLeft: '1rem' }}>\n            <li>If Backend shows error: Make sure the backend server is running on port 5173</li>\n            <li>If Blockchain shows error: TRON network might be experiencing issues</li>\n            <li>If Network is slow: Try again later or check your internet connection</li>\n            <li>If you have tokens but can't scan: Try the \"Test Wallet Verification\" button</li>\n          </ul>\n        </div>\n      </DiagnosticsContainer>\n    </Modal>\n  );\n};\n\nexport default DiagnosticsModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}