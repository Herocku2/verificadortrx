{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATOS/verificador/verificadortrx/frontend/src/components/WalletAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useUser } from '../context/UserContext';\nimport { checkUserExists, registerUser } from '../services/api';\nimport Modal from './Modal';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n_c = AuthContainer;\nconst WalletInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: rgba(30, 40, 60, 0.6);\n  padding: 0.5rem 1rem;\n  border-radius: var(--border-radius);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c2 = WalletInfo;\nconst TokensDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  color: var(--color-primary);\n  font-weight: 500;\n`;\n_c3 = TokensDisplay;\nconst WalletAddress = styled.span`\n  font-family: monospace;\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n`;\n\n// Usar $plan en lugar de plan para evitar que se pase al DOM\n_c4 = WalletAddress;\nconst PlanBadge = styled.span`\n  background-color: ${props => {\n  switch (props.$plan) {\n    case 'Basic':\n      return 'rgba(0, 200, 83, 0.2)';\n    case 'Intermedio':\n      return 'rgba(0, 120, 255, 0.2)';\n    case 'Unlimited':\n      return 'rgba(156, 39, 176, 0.2)';\n    default:\n      return 'rgba(255, 255, 255, 0.1)';\n  }\n}};\n  color: ${props => {\n  switch (props.$plan) {\n    case 'Basic':\n      return 'var(--color-success)';\n    case 'Intermedio':\n      return 'var(--color-primary)';\n    case 'Unlimited':\n      return '#9c27b0';\n    default:\n      return 'var(--color-text-secondary)';\n  }\n}};\n  padding: 0.25rem 0.5rem;\n  border-radius: 12px;\n  font-size: 0.75rem;\n  font-weight: 500;\n`;\n_c5 = PlanBadge;\nconst RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1rem 0;\n`;\n_c6 = RegisterForm;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n_c7 = FormGroup;\nconst Label = styled.label`\n  font-weight: 500;\n  color: var(--color-text);\n`;\n_c8 = Label;\nconst Input = styled.input`\n  padding: 0.75rem;\n  background-color: rgba(30, 40, 60, 0.6);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 2px rgba(0, 120, 255, 0.2);\n  }\n  \n  &::placeholder {\n    color: var(--color-text-secondary);\n  }\n`;\n_c9 = Input;\nconst ConnectedWallet = styled.div`\n  background-color: rgba(0, 200, 83, 0.1);\n  border: 1px solid rgba(0, 200, 83, 0.3);\n  border-radius: var(--border-radius);\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n_c0 = ConnectedWallet;\nconst WelcomeMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  background-color: rgba(0, 200, 83, 0.1);\n  border: 1px solid rgba(0, 200, 83, 0.3);\n  border-radius: var(--border-radius);\n  margin-bottom: 1rem;\n`;\n_c1 = WelcomeMessage;\nconst WalletAuth = () => {\n  _s();\n  const {\n    user,\n    wallet,\n    updateWallet,\n    loading\n  } = useUser();\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [showWelcome, setShowWelcome] = useState(false);\n  const [username, setUsername] = useState('');\n  const [registering, setRegistering] = useState(false);\n  const [tronWeb, setTronWeb] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  // Check for TronWeb availability and detect wallet changes\n  useEffect(() => {\n    let lastAddress = null;\n    const checkTronWeb = () => {\n      if (window.tronWeb) {\n        try {\n          // Verificar si tronWeb está disponible sin acceder a .ready directamente\n          if (window.tronWeb.defaultAddress && window.tronWeb.defaultAddress.base58) {\n            const currentAddress = window.tronWeb.defaultAddress.base58;\n\n            // Actualizar el estado de tronWeb\n            setTronWeb(window.tronWeb);\n\n            // Detectar cambio de wallet en TronLink\n            if (lastAddress && currentAddress !== lastAddress && wallet && currentAddress !== wallet) {\n              console.log(`Cambio de wallet detectado: ${lastAddress} -> ${currentAddress}`);\n\n              // Preguntar al usuario si desea cambiar de wallet\n              if (window.confirm(`Se ha detectado un cambio de wallet en TronLink.\\n\\nWallet actual: ${wallet}\\nNueva wallet: ${currentAddress}\\n\\n¿Deseas cambiar a la nueva wallet?`)) {\n                // Desconectar la wallet actual\n                disconnect();\n\n                // Esperar un momento y luego conectar la nueva wallet\n                setTimeout(() => {\n                  updateWallet(currentAddress);\n                  window.location.reload();\n                }, 500);\n              }\n            }\n            lastAddress = currentAddress;\n          }\n        } catch (error) {\n          console.error('Error checking TronWeb:', error);\n        }\n      }\n    };\n    checkTronWeb();\n    // Usar un intervalo más largo para evitar bucles y advertencias de deprecación\n    const interval = setInterval(checkTronWeb, 3000);\n    return () => clearInterval(interval);\n  }, [wallet]);\n  const connectWallet = async () => {\n    // Si ya hay una wallet conectada, primero desconectarla\n    if (wallet) {\n      if (window.confirm('Ya tienes una wallet conectada. ¿Deseas desconectarla y conectar otra?')) {\n        disconnect();\n        // Esperar a que se complete la desconexión\n        setTimeout(() => {\n          window.location.reload();\n        }, 500);\n      }\n      return;\n    }\n\n    // Verificar si TronLink está instalado\n    if (!window.tronWeb) {\n      if (window.confirm('TronLink no detectado. ¿Deseas instalar la extensión TronLink?')) {\n        window.open('https://www.tronlink.org/', '_blank');\n      }\n      return;\n    }\n    setConnecting(true);\n    try {\n      // Intentar acceder a la wallet de forma más segura\n      if (window.tronWeb && window.tronWeb.defaultAddress) {\n        const address = window.tronWeb.defaultAddress.base58;\n        if (address) {\n          console.log(\"Wallet detectada:\", address);\n\n          // Verificar si la wallet está desbloqueada\n          try {\n            // Intentar obtener la cuenta actual\n            await window.tronWeb.trx.getAccount(address);\n            console.log(\"Wallet desbloqueada:\", address);\n            try {\n              // Check if user exists\n              const data = await checkUserExists(address);\n              if (data && data.exists) {\n                // User exists, log them in\n                updateWallet(address);\n                setShowWelcome(true);\n                setTimeout(() => setShowWelcome(false), 3000);\n              } else {\n                // New user, show registration modal\n                updateWallet(address);\n                setShowRegisterModal(true);\n              }\n            } catch (apiError) {\n              console.error('Error API al verificar usuario:', apiError);\n\n              // Si es un error de red, asumir que el usuario existe\n              if (apiError.message === 'Network Error' || apiError.code === 'ERR_NETWORK') {\n                console.log('Backend no disponible, asumiendo que el usuario existe');\n                updateWallet(address);\n                setShowWelcome(true);\n                setTimeout(() => setShowWelcome(false), 3000);\n              } else {\n                // Si hay otro tipo de error con la API, al menos conectamos la wallet\n                updateWallet(address);\n                alert('Wallet conectada, pero hubo un problema al verificar tu cuenta. El backend podría estar desconectado.');\n              }\n            }\n          } catch (walletError) {\n            console.error('Error al verificar wallet:', walletError);\n            alert('Por favor desbloquea tu wallet TronLink y vuelve a intentarlo');\n          }\n        } else {\n          alert('Por favor desbloquea tu wallet TronLink y vuelve a intentarlo');\n        }\n      } else {\n        alert('TronLink detectado pero no está listo. Por favor desbloquea tu wallet y recarga la página.');\n      }\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      alert('Error al conectar wallet: ' + (error.message || 'Error desconocido'));\n    } finally {\n      setConnecting(false);\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (!username.trim() || !wallet) return;\n    setRegistering(true);\n    try {\n      const data = await registerUser(wallet, username.trim());\n      if (data.success) {\n        setShowRegisterModal(false);\n        setShowWelcome(true);\n        setTimeout(() => setShowWelcome(false), 3000);\n        // Refresh user data\n        window.location.reload();\n      } else {\n        alert(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n\n      // Si es un error de red, simular registro exitoso\n      if (error.message === 'Network Error' || error.code === 'ERR_NETWORK') {\n        console.log('Backend no disponible, simulando registro exitoso');\n        const defaultUser = {\n          usuario: wallet,\n          username: username,\n          tokens_disponibles: 3,\n          plan: 'Free',\n          expira: null\n        };\n        localStorage.setItem(`user_${wallet}`, JSON.stringify(defaultUser));\n        setShowRegisterModal(false);\n        setShowWelcome(true);\n        setTimeout(() => {\n          setShowWelcome(false);\n          window.location.reload();\n        }, 3000);\n      } else {\n        alert('Registration failed. Please try again.');\n      }\n    } finally {\n      setRegistering(false);\n    }\n  };\n  const disconnect = () => {\n    // Limpiar el estado local\n    setShowWelcome(false);\n    setTronWeb(null);\n\n    // Limpiar localStorage\n    localStorage.removeItem('wallet');\n\n    // Actualizar el contexto\n    updateWallet(null);\n\n    // Forzar recarga de la página para asegurar que todo se reinicie correctamente\n    setTimeout(() => {\n      window.location.reload();\n    }, 100);\n  };\n  const formatWallet = address => {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 12\n    }, this);\n  }\n  if (showWelcome && user) {\n    return /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Welcome \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Successfully connected to TRXGuardian\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this);\n  }\n  if (wallet) {\n    // Si hay wallet pero no hay usuario (podría estar cargando o haber un error)\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(AuthContainer, {\n        children: [/*#__PURE__*/_jsxDEV(WalletInfo, {\n          children: /*#__PURE__*/_jsxDEV(WalletAddress, {\n            children: formatWallet(wallet)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"small\",\n          onClick: disconnect,\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Si hay wallet y usuario\n    return /*#__PURE__*/_jsxDEV(AuthContainer, {\n      children: [/*#__PURE__*/_jsxDEV(WalletInfo, {\n        children: [/*#__PURE__*/_jsxDEV(TokensDisplay, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDD39\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [user.tokens_disponibles === Infinity ? '∞' : user.tokens_disponibles || 0, \" tokens\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlanBadge, {\n          $plan: user.plan || 'Free',\n          children: user.plan || 'Free'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WalletAddress, {\n          children: formatWallet(wallet)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"small\",\n        onClick: disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AuthContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: connectWallet,\n        loading: connecting,\n        loadingText: \"Connecting...\",\n        children: tronWeb ? 'Connect Wallet' : 'Install TronLink'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showRegisterModal,\n      onClose: () => setShowRegisterModal(false),\n      title: \"Complete Registration\",\n      closeOnOverlayClick: false,\n      children: [/*#__PURE__*/_jsxDEV(ConnectedWallet, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Connected Wallet:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          children: wallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            maxLength: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          fullWidth: true,\n          loading: registering,\n          loadingText: \"Creating Account...\",\n          disabled: !username.trim(),\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.875rem',\n          color: 'var(--color-text-secondary)',\n          textAlign: 'center',\n          marginTop: '1rem'\n        },\n        children: \"Your wallet address will be used as your unique identifier. No email verification required.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WalletAuth, \"Q8JDq4gtN9aXKgDB/OnkKAqJit0=\", false, function () {\n  return [useUser];\n});\n_c10 = WalletAuth;\nexport default WalletAuth;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10;\n$RefreshReg$(_c, \"AuthContainer\");\n$RefreshReg$(_c2, \"WalletInfo\");\n$RefreshReg$(_c3, \"TokensDisplay\");\n$RefreshReg$(_c4, \"WalletAddress\");\n$RefreshReg$(_c5, \"PlanBadge\");\n$RefreshReg$(_c6, \"RegisterForm\");\n$RefreshReg$(_c7, \"FormGroup\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c0, \"ConnectedWallet\");\n$RefreshReg$(_c1, \"WelcomeMessage\");\n$RefreshReg$(_c10, \"WalletAuth\");","map":{"version":3,"names":["React","useState","useEffect","styled","useUser","checkUserExists","registerUser","Modal","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthContainer","div","_c","WalletInfo","_c2","TokensDisplay","_c3","WalletAddress","span","_c4","PlanBadge","props","$plan","_c5","RegisterForm","form","_c6","FormGroup","_c7","Label","label","_c8","Input","input","_c9","ConnectedWallet","_c0","WelcomeMessage","_c1","WalletAuth","_s","user","wallet","updateWallet","loading","showRegisterModal","setShowRegisterModal","showWelcome","setShowWelcome","username","setUsername","registering","setRegistering","tronWeb","setTronWeb","connecting","setConnecting","lastAddress","checkTronWeb","window","defaultAddress","base58","currentAddress","console","log","confirm","disconnect","setTimeout","location","reload","error","interval","setInterval","clearInterval","connectWallet","open","address","trx","getAccount","data","exists","apiError","message","code","alert","walletError","handleRegister","e","preventDefault","trim","success","defaultUser","usuario","tokens_disponibles","plan","expira","localStorage","setItem","JSON","stringify","removeItem","formatWallet","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","Infinity","loadingText","isOpen","onClose","title","closeOnOverlayClick","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","required","maxLength","fullWidth","disabled","style","fontSize","color","textAlign","marginTop","_c10","$RefreshReg$"],"sources":["/Volumes/DATOS/verificador/verificadortrx/frontend/src/components/WalletAuth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useUser } from '../context/UserContext';\nimport { checkUserExists, registerUser } from '../services/api';\nimport Modal from './Modal';\nimport Button from './Button';\n\nconst AuthContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst WalletInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: rgba(30, 40, 60, 0.6);\n  padding: 0.5rem 1rem;\n  border-radius: var(--border-radius);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst TokensDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  color: var(--color-primary);\n  font-weight: 500;\n`;\n\nconst WalletAddress = styled.span`\n  font-family: monospace;\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n`;\n\n// Usar $plan en lugar de plan para evitar que se pase al DOM\nconst PlanBadge = styled.span`\n  background-color: ${props => {\n    switch(props.$plan) {\n      case 'Basic': return 'rgba(0, 200, 83, 0.2)';\n      case 'Intermedio': return 'rgba(0, 120, 255, 0.2)';\n      case 'Unlimited': return 'rgba(156, 39, 176, 0.2)';\n      default: return 'rgba(255, 255, 255, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch(props.$plan) {\n      case 'Basic': return 'var(--color-success)';\n      case 'Intermedio': return 'var(--color-primary)';\n      case 'Unlimited': return '#9c27b0';\n      default: return 'var(--color-text-secondary)';\n    }\n  }};\n  padding: 0.25rem 0.5rem;\n  border-radius: 12px;\n  font-size: 0.75rem;\n  font-weight: 500;\n`;\n\nconst RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1rem 0;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: var(--color-text);\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  background-color: rgba(30, 40, 60, 0.6);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 2px rgba(0, 120, 255, 0.2);\n  }\n  \n  &::placeholder {\n    color: var(--color-text-secondary);\n  }\n`;\n\nconst ConnectedWallet = styled.div`\n  background-color: rgba(0, 200, 83, 0.1);\n  border: 1px solid rgba(0, 200, 83, 0.3);\n  border-radius: var(--border-radius);\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst WelcomeMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  background-color: rgba(0, 200, 83, 0.1);\n  border: 1px solid rgba(0, 200, 83, 0.3);\n  border-radius: var(--border-radius);\n  margin-bottom: 1rem;\n`;\n\nconst WalletAuth = () => {\n  const { user, wallet, updateWallet, loading } = useUser();\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [showWelcome, setShowWelcome] = useState(false);\n  const [username, setUsername] = useState('');\n  const [registering, setRegistering] = useState(false);\n  const [tronWeb, setTronWeb] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  // Check for TronWeb availability and detect wallet changes\n  useEffect(() => {\n    let lastAddress = null;\n    \n    const checkTronWeb = () => {\n      if (window.tronWeb) {\n        try {\n          // Verificar si tronWeb está disponible sin acceder a .ready directamente\n          if (window.tronWeb.defaultAddress && window.tronWeb.defaultAddress.base58) {\n            const currentAddress = window.tronWeb.defaultAddress.base58;\n            \n            // Actualizar el estado de tronWeb\n            setTronWeb(window.tronWeb);\n            \n            // Detectar cambio de wallet en TronLink\n            if (lastAddress && currentAddress !== lastAddress && wallet && currentAddress !== wallet) {\n              console.log(`Cambio de wallet detectado: ${lastAddress} -> ${currentAddress}`);\n              \n              // Preguntar al usuario si desea cambiar de wallet\n              if (window.confirm(`Se ha detectado un cambio de wallet en TronLink.\\n\\nWallet actual: ${wallet}\\nNueva wallet: ${currentAddress}\\n\\n¿Deseas cambiar a la nueva wallet?`)) {\n                // Desconectar la wallet actual\n                disconnect();\n                \n                // Esperar un momento y luego conectar la nueva wallet\n                setTimeout(() => {\n                  updateWallet(currentAddress);\n                  window.location.reload();\n                }, 500);\n              }\n            }\n            \n            lastAddress = currentAddress;\n          }\n        } catch (error) {\n          console.error('Error checking TronWeb:', error);\n        }\n      }\n    };\n\n    checkTronWeb();\n    // Usar un intervalo más largo para evitar bucles y advertencias de deprecación\n    const interval = setInterval(checkTronWeb, 3000);\n    return () => clearInterval(interval);\n  }, [wallet]);\n\n  const connectWallet = async () => {\n    // Si ya hay una wallet conectada, primero desconectarla\n    if (wallet) {\n      if (window.confirm('Ya tienes una wallet conectada. ¿Deseas desconectarla y conectar otra?')) {\n        disconnect();\n        // Esperar a que se complete la desconexión\n        setTimeout(() => {\n          window.location.reload();\n        }, 500);\n      }\n      return;\n    }\n    \n    // Verificar si TronLink está instalado\n    if (!window.tronWeb) {\n      if (window.confirm('TronLink no detectado. ¿Deseas instalar la extensión TronLink?')) {\n        window.open('https://www.tronlink.org/', '_blank');\n      }\n      return;\n    }\n\n    setConnecting(true);\n    try {\n      // Intentar acceder a la wallet de forma más segura\n      if (window.tronWeb && window.tronWeb.defaultAddress) {\n        const address = window.tronWeb.defaultAddress.base58;\n        if (address) {\n          console.log(\"Wallet detectada:\", address);\n          \n          // Verificar si la wallet está desbloqueada\n          try {\n            // Intentar obtener la cuenta actual\n            await window.tronWeb.trx.getAccount(address);\n            console.log(\"Wallet desbloqueada:\", address);\n            \n            try {\n              // Check if user exists\n              const data = await checkUserExists(address);\n              \n              if (data && data.exists) {\n                // User exists, log them in\n                updateWallet(address);\n                setShowWelcome(true);\n                setTimeout(() => setShowWelcome(false), 3000);\n              } else {\n                // New user, show registration modal\n                updateWallet(address);\n                setShowRegisterModal(true);\n              }\n            } catch (apiError) {\n              console.error('Error API al verificar usuario:', apiError);\n              \n              // Si es un error de red, asumir que el usuario existe\n              if (apiError.message === 'Network Error' || apiError.code === 'ERR_NETWORK') {\n                console.log('Backend no disponible, asumiendo que el usuario existe');\n                updateWallet(address);\n                setShowWelcome(true);\n                setTimeout(() => setShowWelcome(false), 3000);\n              } else {\n                // Si hay otro tipo de error con la API, al menos conectamos la wallet\n                updateWallet(address);\n                alert('Wallet conectada, pero hubo un problema al verificar tu cuenta. El backend podría estar desconectado.');\n              }\n            }\n          } catch (walletError) {\n            console.error('Error al verificar wallet:', walletError);\n            alert('Por favor desbloquea tu wallet TronLink y vuelve a intentarlo');\n          }\n        } else {\n          alert('Por favor desbloquea tu wallet TronLink y vuelve a intentarlo');\n        }\n      } else {\n        alert('TronLink detectado pero no está listo. Por favor desbloquea tu wallet y recarga la página.');\n      }\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      alert('Error al conectar wallet: ' + (error.message || 'Error desconocido'));\n    } finally {\n      setConnecting(false);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    if (!username.trim() || !wallet) return;\n\n    setRegistering(true);\n    try {\n      const data = await registerUser(wallet, username.trim());\n      \n      if (data.success) {\n        setShowRegisterModal(false);\n        setShowWelcome(true);\n        setTimeout(() => setShowWelcome(false), 3000);\n        // Refresh user data\n        window.location.reload();\n      } else {\n        alert(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      \n      // Si es un error de red, simular registro exitoso\n      if (error.message === 'Network Error' || error.code === 'ERR_NETWORK') {\n        console.log('Backend no disponible, simulando registro exitoso');\n        \n        const defaultUser = {\n          usuario: wallet,\n          username: username,\n          tokens_disponibles: 3,\n          plan: 'Free',\n          expira: null\n        };\n        \n        localStorage.setItem(`user_${wallet}`, JSON.stringify(defaultUser));\n        \n        setShowRegisterModal(false);\n        setShowWelcome(true);\n        setTimeout(() => {\n          setShowWelcome(false);\n          window.location.reload();\n        }, 3000);\n      } else {\n        alert('Registration failed. Please try again.');\n      }\n    } finally {\n      setRegistering(false);\n    }\n  };\n\n  const disconnect = () => {\n    // Limpiar el estado local\n    setShowWelcome(false);\n    setTronWeb(null);\n    \n    // Limpiar localStorage\n    localStorage.removeItem('wallet');\n    \n    // Actualizar el contexto\n    updateWallet(null);\n    \n    // Forzar recarga de la página para asegurar que todo se reinicie correctamente\n    setTimeout(() => {\n      window.location.reload();\n    }, 100);\n  };\n\n  const formatWallet = (address) => {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (showWelcome && user) {\n    return (\n      <WelcomeMessage>\n        <h3>Welcome {user.username}!</h3>\n        <p>Successfully connected to TRXGuardian</p>\n      </WelcomeMessage>\n    );\n  }\n\n  if (wallet) {\n    // Si hay wallet pero no hay usuario (podría estar cargando o haber un error)\n    if (!user) {\n      return (\n        <AuthContainer>\n          <WalletInfo>\n            <WalletAddress>{formatWallet(wallet)}</WalletAddress>\n          </WalletInfo>\n          <Button variant=\"outline\" size=\"small\" onClick={disconnect}>\n            Disconnect\n          </Button>\n        </AuthContainer>\n      );\n    }\n    \n    // Si hay wallet y usuario\n    return (\n      <AuthContainer>\n        <WalletInfo>\n          <TokensDisplay>\n            <span>🔹</span>\n            <span>{user.tokens_disponibles === Infinity ? '∞' : user.tokens_disponibles || 0} tokens</span>\n          </TokensDisplay>\n          <PlanBadge $plan={user.plan || 'Free'}>{user.plan || 'Free'}</PlanBadge>\n          <WalletAddress>{formatWallet(wallet)}</WalletAddress>\n        </WalletInfo>\n        <Button variant=\"outline\" size=\"small\" onClick={disconnect}>\n          Disconnect\n        </Button>\n      </AuthContainer>\n    );\n  }\n\n  return (\n    <>\n      <AuthContainer>\n        <Button \n          variant=\"primary\" \n          onClick={connectWallet}\n          loading={connecting}\n          loadingText=\"Connecting...\"\n        >\n          {tronWeb ? 'Connect Wallet' : 'Install TronLink'}\n        </Button>\n      </AuthContainer>\n\n      <Modal\n        isOpen={showRegisterModal}\n        onClose={() => setShowRegisterModal(false)}\n        title=\"Complete Registration\"\n        closeOnOverlayClick={false}\n      >\n        <ConnectedWallet>\n          <strong>Connected Wallet:</strong>\n          <br />\n          <code>{wallet}</code>\n        </ConnectedWallet>\n\n        <RegisterForm onSubmit={handleRegister}>\n          <FormGroup>\n            <Label htmlFor=\"username\">Username</Label>\n            <Input\n              id=\"username\"\n              type=\"text\"\n              placeholder=\"Enter your username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n              maxLength={50}\n            />\n          </FormGroup>\n\n          <Button\n            type=\"submit\"\n            variant=\"primary\"\n            fullWidth\n            loading={registering}\n            loadingText=\"Creating Account...\"\n            disabled={!username.trim()}\n          >\n            Create Account\n          </Button>\n        </RegisterForm>\n\n        <p style={{ \n          fontSize: '0.875rem', \n          color: 'var(--color-text-secondary)', \n          textAlign: 'center',\n          marginTop: '1rem'\n        }}>\n          Your wallet address will be used as your unique identifier.\n          No email verification required.\n        </p>\n      </Modal>\n    </>\n  );\n};\n\nexport default WalletAuth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}